## Prefix like in screen
bind-key C-a send-prefix
unbind-key C-b
set-option -g prefix C-a
bind-key C-a last-window

set-option -g history-limit 10000

## Mouse On by default
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux save-buffer - | xclip -i"

setw -g automatic-rename on

# Clipboard dance
# X clipboards → tmux buffer
bind + run "xsel -bo | tmux loadb - ; tmux pasteb"
bind * run "xsel -o | tmux loadb - ; tmux pasteb"
# tmux buffer → X clipboards
bind y run "tmux saveb - | xsel -bi"
bind Y run "tmux saveb - | xsel -i"

# Use zsh regardless of default settings
if-shell 'test -x /usr/bin/zsh' 'set-option -g default-shell /usr/bin/zsh
if-shell 'test -x $HOME/.linuxbrew/bin/zsh' 'set-option -g default-shell $HOME/.linuxbrew/bin/zsh'

# UTF is great, let us use that
set -g utf8
set-window-option -g utf8 on

# Tmux should be pretty, we need 256 color for that
set -g default-terminal "screen-256color"

set -sg escape-time 0

# Allow us to reload our Tmux configuration while
# using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Getting interesting now, we use the vertical and horizontal
# symbols to split the screen
bind | split-window -h
bind - split-window -v

# vim: se ft=tmux :
