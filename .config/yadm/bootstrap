#!/bin/sh
# vim: set ft=sh sw=2 et :

install_brew() {
  # Proudly borrowed from:
  # https://github.com/duckfullstop/dotfiles/blob/f734eea399a7ccd1c25b57242997e79f230abc4d/.config/yadm/bootstrap

  # install Homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing Homebrew"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  fi

  if [ -f "$HOME/.Brewfile" ]; then
    echo "Updating Homebrew bundle"
    brew bundle --global
  fi
}

install_nix() {
  # This one courtesy of:
  # https://github.com/shadowrylander/shadowrylander/blob/35bb51822c46578d0a5da5810263fa85d464043c/.config/yadm/bootstrap#L56
  install_nix_bin() {
    curl -L https://nixos.org/nix/install | sh
    if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
      . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
    fi
  }
  command -v nix >/dev/null 2>&1 || install_nix_bin

  if [ -f "$HOME/.config/nix/installed_packages" ]; then
    # This list created with `nix-env -qaPs|grep '^I'|awk '{print $2}' > ~/.config/nix/installed_packages`
    cat "$HOME/.config/nix/installed_packages" | xargs nix-env -iA
  fi
  if [ -f "$HOME/.config/nix/installed_packages.local" ]; then
    # Additional packages that might be needed here or there
    cat "$HOME/.config/nix/installed_packages.local" | xargs nix-env -i
  fi
}

configure_macos() {
  # Disable the UI sound
  defaults write com.apple.systemsound "com.apple.sound.uiaudio.enabled" -int 0
  sudo launchctl unload /System/Library/LaunchDaemons/com.apple.audio.coreaudiod.plist
  sudo launchctl load /System/Library/LaunchDaemons/com.apple.audio.coreaudiod.plist

  # Enable Dock autohide
  defaults write com.apple.dock autohide -bool true
  # No app icons in the Dock
  defaults delete com.apple.dock persistent-apps
  defaults delete com.apple.dock persistent-others
  killall Dock

  # Disable Ctrl+Arrow mapping for Mission Control as it's more useful for jumping words in a terminal
  defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 79 "{enabled = 0; value = { parameters = (65535, 123, 8650752); type = standard;};}"
  defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 80 "{enabled = 0; value = { parameters = (65535, 123, 8781824); type = standard;};}"
  defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 81 "{enabled = 0; value = { parameters = (65535, 124, 8650752); type = standard;};}"
  defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 82 "{enabled = 0; value = { parameters = (65535, 124, 8781824); type = standard;};}"

  # Configure Scroll Reverser
  defaults write com.pilotmoon.scroll-reverser InvertScrollingOn -int 1
  defaults write com.pilotmoon.scroll-reverser ReverseMouse -int 0
  defaults write com.pilotmoon.scroll-reverser ReverseX -int 1
  defaults write com.pilotmoon.scroll-reverser StartAtLogin -int 1

  sudo softwareupdate --install-rosetta
}

configure_zsh() {
  # FIXME: We deserve better
  source $HOME/.zshrc
}

configure_vim() {
  # Install vim-plug for Vim
  curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  vim +'PlugInstall --sync' +qa
  # Install vim-plug for Neovim
  sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  nvim +'PlugInstall --sync' +qa
}

configure_tmux() {
  ~/.tmux/plugins/tpm/bin/install_plugins
}

system_type=$(uname -s)

if [ "$system_type" = "Darwin" ]; then
  configure_macos
fi

install_nix
install_brew

configure_zsh
configure_vim
configure_tmux
